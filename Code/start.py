from sys import path
import pandas as pd
from sklearn.model_selection import train_test_split
import probabilities
import user_platform
import analysis
from pybbn.graph.dag import Bbn
import naviebayes
import random_forest
import desition_tree
import matplotlib.pyplot as plt
df_path = 'corona_tested_individuals_modified.csv'

df = pd.read_csv(df_path)

train, test = train_test_split(df, test_size=0.005, random_state=500, shuffle=True)
print("starting to built network..")
bbn,net = probabilities.bayesiannet(train)
Bbn.to_csv(net,'bayesian_net.csv') # to store probabilities generated by bayesian
print('network is finished..')



# spliting data for ML algorithms
df_features = df.drop('corona_result', inplace=False, axis=1)
df_target = df.corona_result

train_df_features, test_df_features, train_df_target, test_df_target = train_test_split(df_features, df_target,test_size=0.05,random_state=1)
print("building ML madels for comparision..")
dtc = desition_tree.desition_tree(train_df_features, train_df_target)
rfc = random_forest.random_forest(train_df_features, train_df_target)
nbc = naviebayes.navie_bayes(train_df_features,train_df_target)

choice = 1
while choice:

    choice = input('enter 1 to perform a user checkup, 2 for testing network, 3 to print bayesian node probabilities:')
    if choice == '1':
        result=user_platform.user_input(bbn, dtc, rfc, nbc)
        bbn = probabilities.resetbbn(train)
    elif choice=='2':
        analysis.analyse_BBN(bbn,test)
        desition_tree.desition_tree_accuracy(dtc,test_df_features, test_df_target)
        random_forest.random_forest_accuracy(rfc,test_df_features, test_df_target)
        naviebayes.navie_bayes_accuracy(nbc,test_df_features, test_df_target)
        plt.show()
    elif choice=='3':
        user_platform.print_probs(bbn)


    # user_platform.print_probs(bbn)
